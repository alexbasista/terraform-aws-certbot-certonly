name: Certbotter

on: 
  workflow_dispatch:
    inputs:
      cert_fqdn:
        description: 'Cert FQDN (Subject Common Name)'     
        required: true
      cert_email:
        description: 'Email address'
        required: true
      s3_output_bucket:
        description: 'S3 Output bucket'
        required: true
      cloud_provider_dns:
        description: 'AWS or Azure for DNS challenge'
        required: true
        default: 'aws'
      route53_hosted_zone:
          description: 'Route53 Hosted Zone name (public)'
          required: false
      azure_dns_zone_name:
          description: 'Azure DNS Zone name (public)'
          required: false
      azure_dns_zone_rg:
          description: 'Azure DNS Zone resource group'
          required: false
      run_tf_destroy:
          description: 'Run Terraform destroy'
          required: false
          default: 'true'

jobs:  
  terraform:
    name: Generate certs
    runs-on: ubuntu-latest
    env:
      working-directory: ./deploy

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform init
        id: init
        run: terraform init
        working-directory: ${{ env.working-directory }}

      - name: Terraform plan
        id: plan
        run: |
          terraform plan -no-color -out="tfplan" \
            -var 'cert_fqdn=${{ github.event.inputs.cert_fqdn }}' \
            -var 'cert_email=${{ github.event.inputs.cert_email }}' \
            -var 's3_output_bucket=${{ github.event.inputs.s3_output_bucket }}' \
            -var 'cloud_provider_dns=${{ github.event.inputs.cloud_provider_dns }}' \
            -var 'route53_hosted_zone=${{ github.event.inputs.route53_hosted_zone }}' \
            -var 'azure_dns_zone_name=${{ github.event.inputs.azure_dns_zone_name }}' \
            -var 'azure_dns_zone_rg=${{ github.event.inputs.azure_dns_zone_rg }}'

        working-directory: ${{ env.working-directory }}
        continue-on-error: false

      - name: Terraform apply
        id: apply
        run: |
          terraform apply "tfplan" -auto-approve

        working-directory: ${{ env.working-directory }}
        continue-on-error: true

      - name: Terraform destroy
        if: ${{ github.event.inputs.run_tf_destroy == 'true' }}
        id: destroy
        run: |
          terraform destroy -auto-approve \
            -var 'cert_fqdn=${{ github.event.inputs.cert_fqdn }}' \
            -var 'cert_email=${{ github.event.inputs.cert_email }}' \
            -var 's3_output_bucket=${{ github.event.inputs.s3_output_bucket }}'
            -var 'cloud_provider_dns=${{ github.event.inputs.cloud_provider_dns }}' \
            -var 'route53_hosted_zone=${{ github.event.inputs.route53_hosted_zone }}' \
            -var 'azure_dns_zone_name=${{ github.event.inputs.azure_dns_zone_name }}' \
            -var 'azure_dns_zone_rg=${{ github.event.inputs.azure_dns_zone_rg }}'

        working-directory: ${{ env.working-directory }}